// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QWellApp.DBConnection;

#nullable disable

namespace QWellApp.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20250301064843_UpdatedActivityLogs")]
    partial class UpdatedActivityLogs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QWellApp.Models.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("AffectedEntity")
                        .HasColumnType("int");

                    b.Property<int>("AffectedEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("QWellApp.Models.ChannelRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChitNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ConsultantFee")
                        .HasColumnType("real");

                    b.Property<float>("DocComm")
                        .HasColumnType("real");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<float>("Nurse1Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse1Id")
                        .HasColumnType("int");

                    b.Property<float>("Nurse2Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse2Id")
                        .HasColumnType("int");

                    b.Property<float?>("OPDCharge")
                        .HasColumnType("real");

                    b.Property<float?>("OtherCharges")
                        .HasColumnType("real");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<float>("PharmacyBill")
                        .HasColumnType("real");

                    b.Property<float>("TotalBill")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("Nurse1Id");

                    b.HasIndex("Nurse2Id");

                    b.HasIndex("PatientId");

                    b.ToTable("ChannelRecords");
                });

            modelBuilder.Entity("QWellApp.Models.LabRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChitNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ConsultantFee")
                        .HasColumnType("real");

                    b.Property<float>("DocComm")
                        .HasColumnType("real");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<float>("LabBill")
                        .HasColumnType("real");

                    b.Property<float>("Nurse1Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse1Id")
                        .HasColumnType("int");

                    b.Property<float>("Nurse2Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse2Id")
                        .HasColumnType("int");

                    b.Property<float?>("OtherCharges")
                        .HasColumnType("real");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<float>("TotalBill")
                        .HasColumnType("real");

                    b.Property<float>("TotalLabPaidCost")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("Nurse1Id");

                    b.HasIndex("Nurse2Id");

                    b.HasIndex("PatientId");

                    b.ToTable("LabRecords");
                });

            modelBuilder.Entity("QWellApp.Models.LabRecordTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LabRecordId")
                        .HasColumnType("int");

                    b.Property<int>("LabTestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabRecordId");

                    b.HasIndex("LabTestId");

                    b.ToTable("LabRecordTests");
                });

            modelBuilder.Entity("QWellApp.Models.LabTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<float?>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabPaid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LabTests");
                });

            modelBuilder.Entity("QWellApp.Models.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChitNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ConsultantFee")
                        .HasColumnType("real");

                    b.Property<float>("DocComm")
                        .HasColumnType("real");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<float>("Nurse1Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse1Id")
                        .HasColumnType("int");

                    b.Property<float>("Nurse2Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse2Id")
                        .HasColumnType("int");

                    b.Property<float?>("OPDCharge")
                        .HasColumnType("real");

                    b.Property<float?>("OtherCharges")
                        .HasColumnType("real");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<float>("PharmacyBill")
                        .HasColumnType("real");

                    b.Property<float>("TotalBill")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("Nurse1Id");

                    b.HasIndex("Nurse2Id");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("QWellApp.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllergicHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("QWellApp.Models.ProcedureRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChitNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ConsultantFee")
                        .HasColumnType("real");

                    b.Property<float>("DocComm")
                        .HasColumnType("real");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<float>("Nurse1Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse1Id")
                        .HasColumnType("int");

                    b.Property<float>("Nurse2Comm")
                        .HasColumnType("real");

                    b.Property<int?>("Nurse2Id")
                        .HasColumnType("int");

                    b.Property<float?>("OPDCharge")
                        .HasColumnType("real");

                    b.Property<float?>("OtherCharges")
                        .HasColumnType("real");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<float>("ProcedureBill")
                        .HasColumnType("real");

                    b.Property<float>("TotalBill")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("Nurse1Id");

                    b.HasIndex("Nurse2Id");

                    b.HasIndex("PatientId");

                    b.ToTable("ProcedureRecords");
                });

            modelBuilder.Entity("QWellApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Generic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SellingPrice")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("QWellApp.Models.ProductMedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AdmitDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChannelRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("LabRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedureRecordId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RecordTypeId")
                        .HasColumnType("int");

                    b.Property<float>("SoldPrice")
                        .HasColumnType("real");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChannelRecordId");

                    b.HasIndex("LabRecordId");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("ProcedureRecordId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecordTypeId");

                    b.ToTable("ProductMedicalRecords");
                });

            modelBuilder.Entity("QWellApp.Models.ProductRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("SellingPrice")
                        .HasColumnType("real");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<float>("SupplierPrice")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductRecords");
                });

            modelBuilder.Entity("QWellApp.Models.RecordType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Records");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Medical"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Lab"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Procedure"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Channel"
                        });
                });

            modelBuilder.Entity("QWellApp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Doctor"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Nursing Assistant"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Intern Nurse"
                        },
                        new
                        {
                            Id = 4,
                            RoleName = "Junior Nurse"
                        },
                        new
                        {
                            Id = 5,
                            RoleName = "Nursing Officer"
                        },
                        new
                        {
                            Id = 6,
                            RoleName = "Senior Nurse"
                        },
                        new
                        {
                            Id = 7,
                            RoleName = "Chief Nurse"
                        },
                        new
                        {
                            Id = 8,
                            RoleName = "Nursing Supervisor"
                        },
                        new
                        {
                            Id = 9,
                            RoleName = "Operation Manager"
                        },
                        new
                        {
                            Id = 10,
                            RoleName = "Manager"
                        },
                        new
                        {
                            Id = 11,
                            RoleName = "Director"
                        });
                });

            modelBuilder.Entity("QWellApp.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("QWellApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QWellApp.Models.UserDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("QWellApp.Models.ActivityLog", b =>
                {
                    b.HasOne("QWellApp.Models.UserDetails", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QWellApp.Models.ChannelRecord", b =>
                {
                    b.HasOne("QWellApp.Models.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QWellApp.Models.User", "Nurse1")
                        .WithMany()
                        .HasForeignKey("Nurse1Id");

                    b.HasOne("QWellApp.Models.User", "Nurse2")
                        .WithMany()
                        .HasForeignKey("Nurse2Id");

                    b.HasOne("QWellApp.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Nurse1");

                    b.Navigation("Nurse2");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("QWellApp.Models.LabRecord", b =>
                {
                    b.HasOne("QWellApp.Models.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("QWellApp.Models.User", "Nurse1")
                        .WithMany()
                        .HasForeignKey("Nurse1Id");

                    b.HasOne("QWellApp.Models.User", "Nurse2")
                        .WithMany()
                        .HasForeignKey("Nurse2Id");

                    b.HasOne("QWellApp.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Nurse1");

                    b.Navigation("Nurse2");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("QWellApp.Models.LabRecordTest", b =>
                {
                    b.HasOne("QWellApp.Models.LabRecord", "LabRecord")
                        .WithMany()
                        .HasForeignKey("LabRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QWellApp.Models.LabTest", "LabTest")
                        .WithMany()
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LabRecord");

                    b.Navigation("LabTest");
                });

            modelBuilder.Entity("QWellApp.Models.MedicalRecord", b =>
                {
                    b.HasOne("QWellApp.Models.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QWellApp.Models.User", "Nurse1")
                        .WithMany()
                        .HasForeignKey("Nurse1Id");

                    b.HasOne("QWellApp.Models.User", "Nurse2")
                        .WithMany()
                        .HasForeignKey("Nurse2Id");

                    b.HasOne("QWellApp.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Nurse1");

                    b.Navigation("Nurse2");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("QWellApp.Models.ProcedureRecord", b =>
                {
                    b.HasOne("QWellApp.Models.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QWellApp.Models.User", "Nurse1")
                        .WithMany()
                        .HasForeignKey("Nurse1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QWellApp.Models.User", "Nurse2")
                        .WithMany()
                        .HasForeignKey("Nurse2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QWellApp.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Nurse1");

                    b.Navigation("Nurse2");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("QWellApp.Models.ProductMedicalRecord", b =>
                {
                    b.HasOne("QWellApp.Models.ChannelRecord", "ChannelRecord")
                        .WithMany()
                        .HasForeignKey("ChannelRecordId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QWellApp.Models.LabRecord", "LabRecord")
                        .WithMany()
                        .HasForeignKey("LabRecordId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QWellApp.Models.MedicalRecord", "MedicalRecord")
                        .WithMany()
                        .HasForeignKey("MedicalRecordId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QWellApp.Models.ProcedureRecord", "ProcedureRecord")
                        .WithMany()
                        .HasForeignKey("ProcedureRecordId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QWellApp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QWellApp.Models.RecordType", "RecordType")
                        .WithMany()
                        .HasForeignKey("RecordTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelRecord");

                    b.Navigation("LabRecord");

                    b.Navigation("MedicalRecord");

                    b.Navigation("ProcedureRecord");

                    b.Navigation("Product");

                    b.Navigation("RecordType");
                });

            modelBuilder.Entity("QWellApp.Models.ProductRecord", b =>
                {
                    b.HasOne("QWellApp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QWellApp.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QWellApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QWellApp.Models.User", b =>
                {
                    b.HasOne("QWellApp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QWellApp.Models.UserDetails", b =>
                {
                    b.HasOne("QWellApp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
